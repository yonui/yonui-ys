{"version":3,"sources":["utils/index.js"],"names":["deepClone","obj","objClone","Array","isArray","key","hasOwnProperty","simpleMerge","target","config","copy","Object","prototype","toString","call","result","keys","forEach","floatRegex","isFloat","number","test","findIndex","arr","item","i","indexOf","isPlainString","data","JSON","parse","e","isNumericalValue","isNaN","isFunction"],"mappings":";;AAAA;;AAEA;;;;AAIA,OAAO,SAASA,SAAT,CAAoBC,GAApB,EAAyB;AAC9B,MAAMC,QAAQ,GAAGC,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqB,EAArB,GAA0B,EAA3C;;AAEA,MAAIA,GAAG,IAAI,QAAOA,GAAP,MAAe,QAA1B,EAAoC;AAClC,SAAK,IAAMI,GAAX,IAAkBJ,GAAlB,EAAuB;AACrB,UAAIA,GAAG,CAACK,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;AAC3B,YAAIJ,GAAG,CAACI,GAAD,CAAH,IAAY,QAAOJ,GAAG,CAACI,GAAD,CAAV,MAAoB,QAApC,EAA8C;AAC5CH,UAAAA,QAAQ,CAACG,GAAD,CAAR,GAAgBL,SAAS,CAACC,GAAG,CAACI,GAAD,CAAJ,CAAzB;AACD,SAFD,MAEO;AACLH,UAAAA,QAAQ,CAACG,GAAD,CAAR,GAAgBJ,GAAG,CAACI,GAAD,CAAnB;AACD;AACF;AACF;AACF;;AACD,SAAOH,QAAP;AACD;AAED;;;;;;;AAMA,OAAO,SAASK,WAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAmD;AAAA,MAAbC,IAAa,uEAAN,IAAM;AACxD,MAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,MAA/B,MAA2C,iBAA/C,EAAkE,OAAOD,MAAP;AAElE,MAAMO,MAAM,GAAGL,IAAI,GAAGV,SAAS,CAACQ,MAAD,CAAZ,GAAuBA,MAA1C;AACAG,EAAAA,MAAM,CAACK,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA4B,UAAAZ,GAAG,EAAI;AACjC,QAAII,MAAM,CAACJ,GAAD,CAAV,EAAiB;AACfU,MAAAA,MAAM,CAACV,GAAD,CAAN,GAAcI,MAAM,CAACJ,GAAD,CAApB;AACD;AACF,GAJD;AAMA,SAAOU,MAAP;AACD;AAED;;;;;AAIA,OAAO,SAASX,OAAT,CAAkBI,MAAlB,EAA0B;AAC/B,SAAOG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,MAA/B,MAA2C,gBAAlD;AACD;AAED,IAAMU,UAAU,GAAG,oBAAnB;AAEA;;;;;AAIA,OAAO,SAASC,OAAT,CAAkBC,MAAlB,EAA0B;AAC/B,SAAOF,UAAU,CAACG,IAAX,CAAgBD,MAAhB,CAAP;AACD;AAED,OAAO,SAASE,SAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACpC,MAAMC,CAAC,GAAGF,GAAG,CAACG,OAAJ,CAAYF,IAAZ,CAAV;AACA,SAAOC,CAAC,KAAK,CAAC,CAAP,GAAW,EAAX,GAAgBA,CAAvB;AACD;AAED;;;;;AAIA,OAAO,SAASE,aAAT,CAAwBnB,MAAxB,EAAgC;AACrC,MAAIoB,IAAI,GAAGpB,MAAX;;AACA,MAAI;AACFoB,IAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWtB,MAAX,CAAP;AACD,GAFD,CAEE,OAAOuB,CAAP,EAAU;AACVH,IAAAA,IAAI,GAAGpB,MAAP;AACD;;AACD,SAAOG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bc,IAA/B,MAAyC,iBAAhD;AACD;AAED;;;;;AAIA,OAAO,SAASI,gBAAT,CAA2BxB,MAA3B,EAAmC;AACxC,SAAO,CAACyB,KAAK,CAACzB,MAAD,CAAb;AACD;AAED,OAAO,SAAS0B,UAAT,CAAqB1B,MAArB,EAA6B;AAClC,SAAOG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,MAA/B,MAA2C,mBAAlD;AACD","sourcesContent":["/* eslint-disable no-prototype-builtins */\n\n/**\n * 深拷贝\n * @param {*} obj\n */\nexport function deepClone (obj) {\n  const objClone = Array.isArray(obj) ? [] : {};\n\n  if (obj && typeof obj === 'object') {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (obj[key] && typeof obj[key] === 'object') {\n          objClone[key] = deepClone(obj[key]);\n        } else {\n          objClone[key] = obj[key];\n        }\n      }\n    }\n  }\n  return objClone;\n}\n\n/**\n * 对象属性合并\n * @param {*} target\n * @param {*} config\n * @param {*} copy\n */\nexport function simpleMerge (target, config, copy = true) {\n  if (Object.prototype.toString.call(config) !== '[object Object]') return target;\n\n  const result = copy ? deepClone(target) : target;\n  Object.keys(config).forEach(key => {\n    if (config[key]) {\n      result[key] = config[key];\n    }\n  });\n\n  return result;\n}\n\n/**\n * 判断是否为数组\n * @param {*} target\n */\nexport function isArray (target) {\n  return Object.prototype.toString.call(target) === '[object Array]';\n}\n\nconst floatRegex = /^[0-9]+\\.?[0-9]+?$/;\n\n/**\n * 判断是否为小数\n * @param {*} number\n */\nexport function isFloat (number) {\n  return floatRegex.test(number);\n}\n\nexport function findIndex (arr, item) {\n  const i = arr.indexOf(item);\n  return i === -1 ? '' : i;\n}\n\n/**\n * 普通字符串\n * @param\n */\nexport function isPlainString (target) {\n  let data = target;\n  try {\n    data = JSON.parse(target);\n  } catch (e) {\n    data = target;\n  }\n  return Object.prototype.toString.call(data) === '[object String]';\n}\n\n/**\n * 数值类型\n * @param\n */\nexport function isNumericalValue (target) {\n  return !isNaN(target);\n}\n\nexport function isFunction (target) {\n  return Object.prototype.toString.call(target) === '[object Function]';\n}\n"],"file":"index.js"}