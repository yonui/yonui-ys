{"version":3,"sources":["components/Input/TextArea.js"],"names":["React","Component","FormControl","DefaultProps","size","sizeMap","small","large","TextArea","props","autosize","placeholder","value","others","state","nextProps","setState","val","e","onChange","componentClass","handleChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,IADO;AAEdC,EAAAA,KAAK,EAAE,IAFO;AAGd,aAAS;AAHK,CAAhB;;IAMMC,Q;;;;;AACJ,oBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,sBASd,MAAKA,KATS;AAAA,QAIhBL,IAJgB,eAIhBA,IAJgB;AAAA,QAKhBM,QALgB,eAKhBA,QALgB;AAAA,QAMhBC,WANgB,eAMhBA,WANgB;AAAA,QAOhBC,KAPgB,eAOhBA,KAPgB;AAAA,QAQbC,MARa;;AAWlB,UAAKC,KAAL,GAAa;AACXV,MAAAA,IAAI,EAAEC,OAAO,CAACD,IAAD,CAAP,IAAiBD,YAAY,CAACC,IADzB;AAEXQ,MAAAA,KAAK,EAALA,KAFW;AAGXD,MAAAA,WAAW,EAAXA,WAHW;AAIXE,MAAAA,MAAM,EAANA;AAJW,KAAb;AAXkB;AAiBnB;;;;8CAE0BE,S,EAAW;AACpC,UAAIA,SAAS,CAACH,KAAV,KAAoB,KAAKH,KAAL,CAAWG,KAAnC,EAA0C;AACxC,aAAKI,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAEG,SAAS,CAACH;AADL,SAAd;AAGD;AACF;;;iCAEaK,G,EAAKC,C,EAAG;AACpB,WAAKF,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAEK;AADK,OAAd;AAGA,WAAKR,KAAL,CAAWU,QAAX,IAAuB,KAAKV,KAAL,CAAWU,QAAX,CAAoBF,GAApB,EAAyBC,CAAzB,CAAvB;AACD;;;6BAES;AAAA;;AACR,UAAME,cAAc,GAAG,UAAvB;AACA,0BACE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWH,WAD1B;AAEE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAFpB;AAGE,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWV,IAHnB;AAIE,QAAA,QAAQ,EAAE,kBAACa,GAAD,EAAMC,CAAN;AAAA,iBAAY,MAAI,CAACG,YAAL,CAAkBJ,GAAlB,EAAuBC,CAAvB,CAAZ;AAAA,SAJZ;AAKE,QAAA,cAAc,EAAEE;AALlB,SAMM,KAAKN,KAAL,CAAWD,MANjB,EADF;AAUD;;;;EA/CoBZ,S;;AAkDvB,eAAeO,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport FormControl from 'bee-form-control';\n\nconst DefaultProps = {\n  size: 'md'\n};\n\nconst sizeMap = {\n  small: 'sm',\n  large: 'lg',\n  default: 'md'\n};\n\nclass TextArea extends Component {\n  constructor (props) {\n    super(props);\n\n    const {\n      size,\n      autosize,\n      placeholder,\n      value,\n      ...others\n    } = this.props;\n\n    this.state = {\n      size: sizeMap[size] || DefaultProps.size,\n      value,\n      placeholder,\n      others\n    };\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({\n        value: nextProps.value\n      })\n    }\n  }\n\n  handleChange (val, e) {\n    this.setState({\n      value: val\n    });\n    this.props.onChange && this.props.onChange(val, e);\n  }\n\n  render () {\n    const componentClass = 'textarea';\n    return (\n      <FormControl\n        placeholder={this.state.placeholder}\n        value={this.props.value}\n        size={this.state.size}\n        onChange={(val, e) => this.handleChange(val, e)}\n        componentClass={componentClass}\n        {...this.state.others}\n      />\n    );\n  }\n}\n\nexport default TextArea;\n"],"file":"TextArea.js"}