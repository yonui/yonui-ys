{"version":3,"sources":["components/Anchor/AnchorLink.js"],"names":["React","Component","isArray","AnchorLink","props","state","hasSub","ref","renderChildren","bind","querySelector","getBoundingClientRect","left","console","log","childrenArr","map","item","index","href","title","children","style","others","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,U;;;;;AACJ,sBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,MAAM,EAAE,IAFG;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAMA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AATkB;AAUnB;;;;wCAEoB;AACnB,UAAI,KAAKF,GAAT,EAAc;AACZ;AADY,oCAEK,KAAKA,GAAL,CAASG,aAAT,CAAuB,GAAvB,EAA4BC,qBAA5B,EAFL;AAAA,YAEJC,IAFI,yBAEJA,IAFI;;AAGZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AACF;;;mCAEeG,W,EAAa;AAC3B,0BACE;AAAK,QAAA,EAAE,EAAC,qBAAR;AAA8B,QAAA,QAAQ,EAAC,gBAAvC;AAAwD,QAAA,KAAK;AAA7D,sBACE;AAAI,QAAA,EAAE,EAAC;AAAP,SAEIA,WAAW,CAACC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/B,4BAAO,oBAAC,UAAD,eAAgBD,IAAI,CAACb,KAArB;AAA4B,UAAA,GAAG,EAAEc;AAAjC,WAAP;AACD,OAFD,CAFJ,CADF,CADF;AAWD;;;6BAES;AAAA;;AAAA,wBAC4C,KAAKd,KADjD;AAAA,UACAe,IADA,eACAA,IADA;AAAA,UACMC,KADN,eACMA,KADN;AAAA,UACaC,QADb,eACaA,QADb;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAAA,UACiCC,MADjC;;AAAA,UAEAjB,MAFA,GAEW,KAAKD,KAFhB,CAEAC,MAFA;;AAIR,UAAI,CAACe,QAAL,EAAe;AACb,4BACE,0BAAQE,MAAR,eAAgB;AAAG,UAAA,IAAI,YAAKJ,IAAL;AAAP,WAAqBC,KAArB,CAAhB,CADF;AAGD;;AACD,UAAML,WAAW,GAAGb,OAAO,CAACmB,QAAD,CAAP,GAAoBA,QAApB,GAA+B,CAACA,QAAD,CAAnD;AACA,0BACE;AAAI,QAAA,SAAS,EAAEf,MAAM,GAAG,SAAH,GAAe,EAApC;AAAwC,QAAA,GAAG,EAAE,aAACkB,CAAD,EAAO;AAAE,UAAA,MAAI,CAACjB,GAAL,GAAWiB,CAAX;AAAc;AAApE,SAA0ED,MAA1E,gBACE;AAAG,QAAA,IAAI,YAAKJ,IAAL;AAAP,SAAqBC,KAArB,CADF,EAEG,KAAKZ,cAAL,CAAoBO,WAApB,CAFH,CADF;AAMD;;;;EAnDsBd,S;;AAsDzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { isArray } from '../../utils';\n\nclass AnchorLink extends Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      // 通过hasSub 来控制有层级结构时父元素的边框\n      hasSub: true,\n      ref: null\n    };\n\n    this.renderChildren = this.renderChildren.bind(this);\n  }\n\n  componentDidMount () {\n    if (this.ref) {\n      // 根据父元素的左边距，递增计算子元素的左边距\n      const { left } = this.ref.querySelector('a').getBoundingClientRect();\n      console.log(left);\n    }\n  }\n\n  renderChildren (childrenArr) {\n    return (\n      <div id='u-nav-child-wrapper' selector='#u-nav-child a' affix>\n        <ul id='u-nav-child'>\n          {\n            childrenArr.map((item, index) => {\n              return <AnchorLink {...item.props} key={index} />;\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n\n  render () {\n    const { href, title, children, style, ...others } = this.props;\n    const { hasSub } = this.state;\n\n    if (!children) {\n      return (\n        <li {...others}><a href={`${href}`}>{title}</a></li>\n      );\n    }\n    const childrenArr = isArray(children) ? children : [children];\n    return (\n      <li className={hasSub ? 'has-sub' : ''} ref={(e) => { this.ref = e }} {...others}>\n        <a href={`${href}`}>{title}</a>\n        {this.renderChildren(childrenArr)}\n      </li>\n    );\n  }\n}\n\nexport default AnchorLink;\n"],"file":"AnchorLink.js"}