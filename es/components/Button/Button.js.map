{"version":3,"sources":["components/Button/Button.js"],"names":["React","Component","Button","classnames","ant2tinper","small","large","down","ButtonAdapter","props","size","type","children","res","className","shape","colors","bordered","index","Array","map","item","i","renderChilren","icon","iconType","cls","getProps","delay","other","renderIcon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'bee-button';\nimport classnames from 'classnames';\n\nconst ant2tinper = {\n  '': '',\n  small: 'sm',\n  large: 'lg',\n  default: 'md',\n  down: 'uf uf-arrow-down'\n};\n\nclass ButtonAdapter extends Component {\n    getProps = (props) => {\n      const { size, type, children } = props;\n      const res = {};\n      res.className = props.className;\n\n      if (!children) {\n        res.className = classnames(res.className, 'u-button-icon');\n        res.shape = 'icon';\n      }\n      res.size = ant2tinper[size];\n\n      switch (type) {\n        case 'primary': {\n          res.colors = 'primary';\n          break;\n        }\n        case 'danger': {\n          res.colors = 'danger';\n          res.bordered = true;\n          break;\n        }\n        case 'dashed': {\n          res.className = classnames(res.className, 'u-button-dashed');\n          res.bordered = true;\n          break;\n        }\n        case 'ghost': {\n          res.className = classnames(res.className, 'u-button-ghost');\n          break;\n        }\n        case 'uppage': {\n          res.className = classnames(res.className, 'u-button-uppage');\n          res.bordered = true;\n          break;\n        }\n        case 'downpage': {\n          res.className = classnames(res.className, 'u-button-downpage');\n          res.bordered = true;\n          break;\n        }\n        case 'default': {\n          res.className = classnames(res.className, 'u-button-default');\n          break;\n        }\n        default: {\n          res.bordered = true;\n        }\n      }\n      return res;\n    }\n\n    renderChilren = (children, index = 0) => {\n      if (typeof children === 'string') {\n        return <span key={index}>{children}</span>;\n      }\n\n      if (children instanceof Array) {\n        return children.map((item, i) => {\n          return this.renderChilren(item, i);\n        });\n      }\n\n      return children;\n    }\n\n    renderIcon = () => {\n      const { icon, iconType } = this.props;\n\n      if (!icon) return null;\n\n      if (ant2tinper[icon]) {\n        return <i className={ant2tinper[icon]} />;\n      }\n      const cls = iconType === 'iconfont' ? `icon iconfont icon-${icon}` : `anticon anticon-${icon}`;\n      return <i className={cls} />;\n    }\n\n    render () {\n      const props = this.getProps(this.props);\n      const { delay, children, ...other } = this.props;\n      return (\n        <Button\n          // {...other}\n          {...props}\n          {...other}\n        >\n          {this.renderIcon()}\n          {this.renderChilren(children)}\n        </Button>\n      );\n    }\n}\n\nexport default ButtonAdapter;\n"],"file":"Button.js"}