{"version":3,"sources":["components/Badge/Badge.js"],"names":["React","Component","PropTypes","classnames","Badge","simpleMerge","propTypes","count","number","overflowCount","defaultProps","placement","status","ColorsMap","success","error","processing","warning","BadgeAdapter","props","showZero","style","className","children","others","$status","dataBadge","condition","innerClassName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA;;;;;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEL,SAAS,CAACM,MADD;AAEhBC,EAAAA,aAAa,EAAEP,SAAS,CAACM;AAFT,CAAlB;AAKA,IAAME,YAAY,GAAG;AACnBD,EAAAA,aAAa,EAAE,EADI;AAEnBE,EAAAA,SAAS,EAAE,OAFQ;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;AAMA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,SADO;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhB,aAAS,MAHO;AAIhBC,EAAAA,UAAU,EAAE,SAJI;AAKhBC,EAAAA,OAAO,EAAE;AALO,CAAlB;;IAQMC,Y;;;;;;;;;;;;;6BACM;AAAA,wBAUJ,KAAKC,KAVD;AAAA,UAENZ,KAFM,eAENA,KAFM;AAAA,UAGNa,QAHM,eAGNA,QAHM;AAAA,UAINC,KAJM,eAINA,KAJM;AAAA,UAKNT,MALM,eAKNA,MALM;AAAA,UAMNU,SANM,eAMNA,SANM;AAAA,UAONb,aAPM,eAONA,aAPM;AAAA,UAQNc,QARM,eAQNA,QARM;AAAA,UASHC,MATG;;AAYR,UAAMC,OAAO,GAAGZ,SAAS,CAACD,MAAD,CAAzB;AAEA,UAAMc,SAAS,GAAGnB,KAAK,GAAGE,aAAR,aAA2BA,aAA3B,SAA8CF,KAAhE;AACA,UAAMoB,SAAS,GAAGP,QAAQ,IAAKb,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,GAAxD;;AAEA,UAAIqB,cAAc,yCACJhB,MADI,GACO,IADP,CAAlB;;AAGA,UAAI,KAAKO,KAAL,CAAWI,QAAf,EAAyB;AACvBK,QAAAA,cAAc,GAAGvB,WAAW,CAACuB,cAAD,EAAiB;AAC3C,sBAAY,KAAKT,KAAL,CAAWR,SAAX,KAAyB,MADM;AAE3C,uBAAa,KAAKQ,KAAL,CAAWR,SAAX,KAAyB;AAFK,SAAjB,CAA5B;AAID,OAzBO,CA2BR;;;AACA,aACEgB,SAAS,gBAAG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAED,SAAlB;AAA6B,QAAA,MAAM,EAAED;AAArC,SAAkDD,MAAlD;AAA0D,QAAA,SAAS,EAAErB,UAAU,CAACyB,cAAD,EAAiBN,SAAjB;AAA/E,UACTC,QADS,CAAH,GAEE,IAHb;AAKD;;;;EAlCwBtB,S;;AAqC3BiB,YAAY,CAACZ,SAAb,GAAyBA,SAAzB;AACAY,YAAY,CAACR,YAAb,GAA4BA,YAA5B;AAEA,eAAeQ,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classnames from 'classnames';\n\nimport Badge from 'bee-badge';\nimport { simpleMerge } from '../../utils';\n\n/**\n * 开发说明：\n *  1. antd 的badge 标签上设置的 style、className 样式信息，暂没有实现转为tinper 的样式\n */\n\nconst propTypes = {\n  count: PropTypes.number,\n  overflowCount: PropTypes.number\n};\n\nconst defaultProps = {\n  overflowCount: 99,\n  placement: 'right',\n  status: 'error'\n};\n\nconst ColorsMap = {\n  success: 'success',\n  error: 'error',\n  default: 'info',\n  processing: 'primary',\n  warning: 'warning'\n};\n\nclass BadgeAdapter extends Component {\n  render () {\n    const {\n      count,\n      showZero,\n      style,\n      status,\n      className,\n      overflowCount,\n      children,\n      ...others\n    } = this.props;\n\n    const $status = ColorsMap[status];\n\n    const dataBadge = count > overflowCount ? `${overflowCount}+` : count;\n    const condition = showZero || (count !== 0 && count !== '0');\n\n    let innerClassName = {\n      [`u-badge-${status}`]: true\n    };\n    if (this.props.children) {\n      innerClassName = simpleMerge(innerClassName, {\n        'left-top': this.props.placement === 'left',\n        'right-top': this.props.placement === 'right'\n      });\n    }\n\n    // TODO: antd 的 Badge style 属性会传递给子元素，这里暂未做处理\n    return (\n      condition ? <Badge dataBadge={dataBadge} colors={$status} {...others} className={classnames(innerClassName, className)}>\n        {children}\n      </Badge> : null\n    );\n  }\n}\n\nBadgeAdapter.propTypes = propTypes;\nBadgeAdapter.defaultProps = defaultProps;\n\nexport default BadgeAdapter;\n"],"file":"Badge.js"}