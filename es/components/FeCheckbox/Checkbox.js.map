{"version":3,"sources":["components/FeCheckbox/Checkbox.js"],"names":["React","Component","Checkbox","KeyCode","classnames","PropTypes","omit","isNumericalValue","isPlainString","CheckboxAdapter","props","checked","undefined","context","checkboxGroup","initialValueList","valueList","includes","value","target","Object","assign","onChange","setState","isGroup","state","contextChecked","nextProps","process","env","__THEMETYPE__","GroupAdapter","newValueList","slice","push","splice","indexOf","focusKey","options","getOptions","arr","filter","val","sort","a","b","indexA","findIndex","opt","indexB","e","activeDom","cb","dom","optionKeys","length","hasClass","className","parents","focusIndex","optionCount","st","newIndex","keyCode","LEFT","RIGHT","Array","handleChange","checkgroup","addEventListener","handleKeyDown","console","error","prevProps","prevState","focusEle","querySelector","focus","map","option","label","hasOwnProperty","children","others","toString","disabled","el","handleFocus","Children","child","cloneElement","fun","array","string","Group","contextTypes","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,aAAhD;;IAEMC,e;;;;;AACJ,2BAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,8DAoBV,YAAM;AACd,aAAO,MAAKA,KAAL,CAAWC,OAAX,KAAuBC,SAA9B;AACD,KAtBmB;;AAAA,qEAyBH,YAAM;AAAA,kCACU,MAAKC,OADf,CACbC,aADa;AAAA,UACbA,aADa,sCACG,EADH;AAErB,UAAMC,gBAAgB,GAAGD,aAAa,CAACE,SAAvC;AACA,aAAOD,gBAAgB,IAAIA,gBAAgB,CAACE,QAAjB,CAA0B,MAAKP,KAAL,CAAWQ,KAArC,CAA3B;AACD,KA7BmB;;AAAA,+DA+BT,UAACP,OAAD,EAAa;AACtB,UAAMQ,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,IAAI,CAAC,MAAKI,KAAN,EAAa,CAAC,SAAD,EAAY,UAAZ,CAAb,CAAtB,EAA6D;AAAEC,QAAAA,OAAO,EAAPA;AAAF,OAA7D,CAAf;AADsB,UAGdW,QAHc,GAGD,MAAKZ,KAHJ,CAGdY,QAHc;AAItBA,MAAAA,QAAQ,IAAIA,QAAQ,CAACX,OAAD,CAApB;AAJsB,UAMdG,aANc,GAMI,MAAKD,OANT,CAMdC,aANc;;AAOtB,UAAIA,aAAa,IAAIA,aAAa,CAACQ,QAAnC,EAA6C;AAC3C,YAAMJ,KAAK,GAAGC,MAAM,CAACD,KAArB;AACAJ,QAAAA,aAAa,CAACQ,QAAd,CAAuBJ,KAAvB,EAA8BP,OAA9B;;AAEA,cAAKY,QAAL,CAAc;AACZZ,UAAAA,OAAO,EAAPA;AADY,SAAd;AAGD;AACF,KA9CmB;;AAElB,QAAMA,QAAO,GAAG,MAAKa,OAAL,KAAiB,KAAjB,GAAyB,CAAC,CAACd,KAAK,CAACC,OAAjD;;AACA,UAAKc,KAAL,GAAa;AACXd,MAAAA,OAAO,EAAPA;AADW,KAAb;AAHkB;AAMnB;;;;wCAEoB;AACnB,UAAI,KAAKa,OAAL,EAAJ,EACE,KAAKD,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE,KAAKe,cAAL;AAAX,OAAd;AACH;;;8CAE0BC,S,EAAW;AACpC,UAAIA,SAAS,CAAChB,OAAV,KAAsBC,SAA1B,EAAqC;AACnC,aAAKW,QAAL,CAAc;AAAEZ,UAAAA,OAAO,EAAE,CAAC,CAACgB,SAAS,CAAChB;AAAvB,SAAd;AACD;AACF,K,CAED;;;;6BA6BU;AACR,UAAMA,OAAO,GAAG,KAAKa,OAAL,KAAiB,KAAKE,cAAL,EAAjB,GAAyC,KAAKD,KAAL,CAAWd,OAApE;AAEA,0BACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEA;AADX,SAEML,IAAI,CAAC,KAAKI,KAAN,EAAa,CAAC,SAAD,CAAb,CAFV;AAGE,QAAA,OAAO,EAAEkB,OAAO,CAACC,GAAR,CAAYC,aAAZ,KAA8B,KAHzC;AAIE,QAAA,QAAQ,EAAE,KAAKR;AAJjB,SADF;AAQD;;;;EA5D2BrB,S;;IA+DxB8B,Y;;;;;AACJ,wBAAarB,KAAb,EAAoB;AAAA;;AAAA;;AAClB,gCAAMA,KAAN;;AADkB,oEAkDL,UAACQ,KAAD,EAA2B;AAAA,UAAnBP,OAAmB,uEAAT,IAAS;;AACxC,UAAMqB,YAAY,GAAG,OAAKP,KAAL,CAAWT,SAAX,CAAqBiB,KAArB,EAArB;;AAEA,UAAItB,OAAJ,EAAa;AACXqB,QAAAA,YAAY,CAACE,IAAb,CAAkBhB,KAAlB;AACD,OAFD,MAEO;AACL,YAAIc,YAAY,CAACf,QAAb,CAAsBC,KAAtB,CAAJ,EAAkC;AAChCc,UAAAA,YAAY,CAACG,MAAb,CAAoBH,YAAY,CAACI,OAAb,CAAqBlB,KAArB,CAApB,EAAiD,CAAjD;AACD;AACF;;AAED,aAAKK,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAEgB,YADC;AAEZK,QAAAA,QAAQ,EAAEnB;AAFE,OAAd;;AAXwC,UAgBhCI,QAhBgC,GAgBnB,OAAKZ,KAhBc,CAgBhCY,QAhBgC;;AAiBxC,UAAIA,QAAJ,EAAc;AACZ,YAAMgB,OAAO,GAAG,OAAKC,UAAL,EAAhB;;AACA,YAAMC,GAAG,GAAGR,YAAY,CAACS,MAAb,CAAoB,UAAAC,GAAG;AAAA,iBAAIV,YAAY,CAACI,OAAb,CAAqBM,GAArB,MAA8B,CAAC,CAAnC;AAAA,SAAvB,EAA6DC,IAA7D,CAAkE,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtF,cAAMC,MAAM,GAAGR,OAAO,CAACS,SAAR,CAAkB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAAC9B,KAAJ,KAAc0B,CAAlB;AAAA,WAArB,CAAf;AACA,cAAMK,MAAM,GAAGX,OAAO,CAACS,SAAR,CAAkB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAAC9B,KAAJ,KAAc2B,CAAlB;AAAA,WAArB,CAAf;AACA,iBAAOC,MAAM,GAAGG,MAAhB;AACD,SAJW,CAAZ;AAKA3B,QAAAA,QAAQ,CAACkB,GAAD,CAAR;AACD;AACF,KA5EmB;;AAAA,mEA8EN,UAACU,CAAD,EAAO;AACnB,UAAMC,SAAS,GAAGC,EAAE,CAACC,GAAH,CAAOH,CAAC,CAAC/B,MAAT,CAAlB;;AADmB;AAAA,UAEXmC,UAFW,yBAEXA,UAFW;;AAGnB,UAAI,CAACA,UAAU,CAACC,MAAhB,EAAwB;;AACxB,UAAIJ,SAAS,CAACK,QAAV,CAAmB,sBAAnB,CAAJ,EAAgD;AAC9C,eAAKjC,QAAL,CAAc;AACZc,UAAAA,QAAQ,EAAEiB,UAAU,CAAC,CAAD;AADR,SAAd;AAGD;AACF,KAvFmB;;AAAA,qEAyFJ,UAACJ,CAAD,EAAO;AACrB,UAAMC,SAAS,GAAGC,EAAE,CAACC,GAAH,CAAOH,CAAC,CAAC/B,MAAT,CAAlB;;AACA,UAAI+B,CAAC,CAAC/B,MAAF,CAASsC,SAAT,CAAmBrB,OAAnB,CAA2B,sBAA3B,IAAqD,CAArD,IAA0De,SAAS,CAACO,OAAV,CAAkB,uBAAlB,EAA2CH,MAA3C,GAAoD,CAAlH,EAAqH;AAAA,YAC3GlB,QAD2G,GAC9F,OAAKZ,KADyF,CAC3GY,QAD2G;;AAAA;AAAA,YAE3GiB,UAF2G,0BAE3GA,UAF2G;;AAGnH,YAAMK,UAAU,GAAGL,UAAU,CAAClB,OAAX,CAAmBC,QAAnB,CAAnB;AACA,YAAMuB,WAAW,GAAGN,UAAU,CAACC,MAA/B;AACA,YAAMM,EAAE,GAAG,EAAX;;AACA,YAAIF,UAAU,GAAG,CAAC,CAAd,IAAmBA,UAAU,GAAGC,WAApC,EAAiD;AAC/C,cAAIE,QAAJ;;AACA,kBAAQZ,CAAC,CAACa,OAAV;AACE,iBAAK5D,OAAO,CAAC6D,IAAb;AACEF,cAAAA,QAAQ,GAAGH,UAAU,GAAG,CAAb,GAAiB,CAAjB,GAAqBC,WAAW,GAAG,CAAnC,GAAuCD,UAAU,GAAG,CAA/D;AACAE,cAAAA,EAAE,CAACxB,QAAH,GAAciB,UAAU,CAACQ,QAAD,CAAxB;AACA;;AACF,iBAAK3D,OAAO,CAAC8D,KAAb;AACEH,cAAAA,QAAQ,GAAGH,UAAU,GAAG,CAAb,GAAiBC,WAAjB,GAA+BD,UAAU,GAAG,CAA5C,GAAgD,CAA3D;AACAE,cAAAA,EAAE,CAACxB,QAAH,GAAciB,UAAU,CAACQ,QAAD,CAAxB;AACA;;AACF;AACE;AAVJ;AAYD;;AACD,eAAKvC,QAAL,CAAcsC,EAAd;AACD;AACF,KAlHmB;;AAElB,WAAKpC,KAAL,GAAa;AACXT,MAAAA,SAAS,EAAEN,KAAK,CAACQ,KAAN,YAAuBgD,KAAvB,GAA+BxD,KAAK,CAACQ,KAArC,GAA6C,EAD7C;AAEXmB,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIA,WAAKiB,UAAL,GAAkB,EAAlB;AANkB;AAOnB;;;;sCAUkB;AACjB,aAAO;AACLxC,QAAAA,aAAa,EAAE;AACbQ,UAAAA,QAAQ,EAAE,KAAK6C,YADF;AAEbnD,UAAAA,SAAS,EAAE,KAAKS,KAAL,CAAWT,SAFT;AAGbqB,UAAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWY;AAHR;AADV,OAAP;AAOD;;;wCAEoB;AACnB,UAAI,KAAK+B,UAAT,EACE,KAAKA,UAAL,CAAgBC,gBAAhB,CAAiC,SAAjC,EAA4C,KAAKC,aAAjD;AACH;;;8CAE0B3C,S,EAAW;AACpC,UAAMK,YAAY,GAAGL,SAAS,CAACT,KAAV,YAA2BgD,KAA3B,GAAmCvC,SAAS,CAACT,KAA7C,GAAqD,EAA1E;AACA,WAAKK,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAEgB;AADC,OAAd;AAGA,UAAI,EAAEL,SAAS,CAACT,KAAV,YAA2BgD,KAA7B,CAAJ,EAAyCK,OAAO,CAACC,KAAR,CAAe,kCAAf;AAC1C;;;uCAEmBC,S,EAAWC,S,EAAW;AAAA,UAChCrC,QADgC,GACnB,KAAKZ,KADc,CAChCY,QADgC;AAExC,UAAI,CAAC9B,gBAAgB,CAAC8B,QAAD,CAAjB,IAA+B,CAAC7B,aAAa,CAAC6B,QAAD,CAAjD,EAA6D;;AAE7D,UAAIA,QAAQ,IAAIA,QAAQ,KAAKqC,SAAS,CAACrC,QAAvC,EAAiD;AAC/C,YAAMsC,QAAQ,GAAG,KAAKP,UAAL,GAAkB,KAAKA,UAAL,CAAgBQ,aAAhB,yBAA8CvC,QAA9C,SAAlB,GAAgF,IAAjG;AACAsC,QAAAA,QAAQ,IAAIA,QAAQ,CAACE,KAAT,EAAZ;AACD;AACF;;;iCAoEa;AAAA;;AAAA,gCACa,KAAKnE,KADlB,CACJ4B,OADI;AAAA,UACJA,OADI,oCACM,EADN;AAEZ,WAAKgB,UAAL,GAAkB,EAAlB;AACA,aAAQhB,OAAD,CAAUwC,GAAV,CAAc,UAAAC,MAAM,EAAI;AAC7B,YAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAA,MAAI,CAACzB,UAAL,CAAgBpB,IAAhB,CAAqB6C,MAArB;;AACA,iBAAO;AACLC,YAAAA,KAAK,EAAED,MADF;AAEL7D,YAAAA,KAAK,EAAE6D;AAFF,WAAP;AAID;;AACDA,QAAAA,MAAM,CAACE,cAAP,CAAsB,OAAtB,KAAkC,MAAI,CAAC3B,UAAL,CAAgBpB,IAAhB,CAAqB6C,MAAM,CAAC7D,KAA5B,CAAlC;AACA,eAAO6D,MAAP;AACD,OAVM,CAAP;AAWD;;;6BAES;AAAA;;AAAA,wBAQJ,KAAKrE,KARD;AAAA,UAENY,QAFM,eAENA,QAFM;AAAA,UAGNJ,KAHM,eAGNA,KAHM;AAAA,UAINuC,SAJM,eAINA,SAJM;AAAA,UAKNyB,QALM,eAKNA,QALM;AAAA,UAMN5C,OANM,eAMNA,OANM;AAAA,UAOH6C,MAPG;;AASR,UAAI7C,OAAO,IAAIA,OAAO,CAACiB,MAAR,GAAiB,CAAhC,EAAmC;AACjC2B,QAAAA,QAAQ,GAAG,KAAK3C,UAAL,GAAkBuC,GAAlB,CAAsB,UAAAC,MAAM;AAAA,8BACrC,oBAAC,eAAD;AACE,YAAA,GAAG,EAAEA,MAAM,CAAC7D,KAAP,CAAakE,QAAb,EADP;AAEE,YAAA,QAAQ,EAAE,cAAcL,MAAd,GAAuBA,MAAM,CAACM,QAA9B,GAAyC,MAAI,CAAC3E,KAAL,CAAW2E,QAFhE;AAGE,YAAA,KAAK,EAAEN,MAAM,CAAC7D,KAHhB;AAIE,YAAA,OAAO,EAAE,MAAI,CAACO,KAAL,CAAWT,SAAX,CAAqBoB,OAArB,CAA6B2C,MAAM,CAAC7D,KAApC,MAA+C,CAAC,CAJ3D;AAKE,YAAA,OAAO,EAAE,MAAI,CAACO,KAAL,CAAWY,QAAX,KAAwB0C,MAAM,CAAC7D;AAL1C,aAOG6D,MAAM,CAACC,KAPV,CADqC;AAAA,SAA5B,CAAX;AAWD;;AAED,0BAAO,wCAASG,MAAT;AAAiB,QAAA,SAAS,EAAE/E,UAAU,CAACqD,SAAD,EAAY,sBAAZ,CAAtC;AAA2E,QAAA,GAAG,EAAE,aAAA6B,EAAE,EAAI;AAAE,UAAA,MAAI,CAAClB,UAAL,GAAkBkB,EAAlB;AAAsB,SAA9G;AAAgH,QAAA,QAAQ,EAAC,GAAzH;AAA6H,QAAA,OAAO,EAAE,KAAKC;AAA3I,UAEHvF,KAAK,CAACwF,QAAN,CAAeV,GAAf,CAAmBI,QAAnB,EAA6B,UAAAO,KAAK;AAAA,4BAAIzF,KAAK,CAAC0F,YAAN,CAAmBD,KAAnB,EAA0B;AAAEhC,UAAAA,SAAS,EAAErD,UAAU,CAACqF,KAAK,CAAC/E,KAAN,CAAY+C,SAAb,EAAwB,yBAAxB;AAAvB,SAA1B,CAAJ;AAAA,OAAlC,CAFG,CAAP;AAKD;;;;EAjKwBxD,S;;gBAArB8B,Y,uBAUuB;AACzBjB,EAAAA,aAAa,EAAE;AACbQ,IAAAA,QAAQ,EAAEjB,SAAS,CAACsF,GADP;AAEb3E,IAAAA,SAAS,EAAEX,SAAS,CAACuF,KAFR;AAGbvD,IAAAA,QAAQ,EAAEhC,SAAS,CAACwF;AAHP;AADU,C;;AA0J7BpF,eAAe,CAACqF,KAAhB,GAAwB/D,YAAxB;AACAtB,eAAe,CAACsF,YAAhB,GAA+B;AAC7BjF,EAAAA,aAAa,EAAET,SAAS,CAAC2F;AADI,CAA/B;AAGA,eAAevF,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from 'bee-checkbox';\nimport { KeyCode } from 'tinper-bee-core';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport omit from 'omit.js';\n\nimport { isNumericalValue, isPlainString } from '../../utils';\n\nclass CheckboxAdapter extends Component {\n  constructor (props) {\n    super(props);\n    const checked = this.isGroup() ? false : !!props.checked;\n    this.state = {\n      checked\n    }\n  }\n\n  componentDidMount () {\n    if (this.isGroup())\n      this.setState({ checked: this.contextChecked() })\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.checked !== undefined) {\n      this.setState({ checked: !!nextProps.checked })\n    }\n  }\n\n  // 外部使用了 checkbox.group\n  isGroup = () => {\n    return this.props.checked === undefined;\n  }\n\n  // react context\n  contextChecked = () => {\n    const { checkboxGroup = {} } = this.context;\n    const initialValueList = checkboxGroup.valueList;\n    return initialValueList && initialValueList.includes(this.props.value);\n  }\n\n  onChange = (checked) => {\n    const target = Object.assign({}, omit(this.props, ['checked', 'onChange']), { checked });\n\n    const { onChange } = this.props;\n    onChange && onChange(checked);\n\n    const { checkboxGroup } = this.context;\n    if (checkboxGroup && checkboxGroup.onChange) {\n      const value = target.value;\n      checkboxGroup.onChange(value, checked);\n\n      this.setState({\n        checked\n      });\n    }\n  }\n\n  render () {\n    const checked = this.isGroup() ? this.contextChecked() : this.state.checked\n\n    return (\n      <Checkbox\n        checked={checked}\n        {...omit(this.props, ['checked'])}\n        inverse={process.env.__THEMETYPE__ === 'ncc'}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nclass GroupAdapter extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      valueList: props.value instanceof Array ? props.value : [],\n      focusKey: '',\n    }\n    this.optionKeys = [];\n  }\n\n  static childContextTypes = {\n    checkboxGroup: {\n      onChange: PropTypes.fun,\n      valueList: PropTypes.array,\n      focusKey: PropTypes.string\n    }\n  }\n\n  getChildContext () {\n    return {\n      checkboxGroup: {\n        onChange: this.handleChange,\n        valueList: this.state.valueList,\n        focusKey: this.state.focusKey\n      }\n    };\n  }\n\n  componentDidMount () {\n    if (this.checkgroup)\n      this.checkgroup.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    const newValueList = nextProps.value instanceof Array ? nextProps.value : [];\n    this.setState({\n      valueList: newValueList\n    });\n    if (!(nextProps.value instanceof Array)) console.error(('Error: value should be an array.'));\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    const { focusKey } = this.state;\n    if (!isNumericalValue(focusKey) && !isPlainString(focusKey)) return;\n\n    if (focusKey && focusKey !== prevState.focusKey) {\n      const focusEle = this.checkgroup ? this.checkgroup.querySelector(`input[value=\"${focusKey}\"]`) : null;\n      focusEle && focusEle.focus();\n    }\n  }\n\n  handleChange = (value, checked = true) => {\n    const newValueList = this.state.valueList.slice();\n\n    if (checked) {\n      newValueList.push(value);\n    } else {\n      if (newValueList.includes(value)) {\n        newValueList.splice(newValueList.indexOf(value), 1);\n      }\n    }\n\n    this.setState({\n      valueList: newValueList,\n      focusKey: value\n    })\n\n    const { onChange } = this.props;\n    if (onChange) {\n      const options = this.getOptions();\n      const arr = newValueList.filter(val => newValueList.indexOf(val) !== -1).sort((a, b) => {\n        const indexA = options.findIndex(opt => opt.value === a);\n        const indexB = options.findIndex(opt => opt.value === b);\n        return indexA - indexB;\n      });\n      onChange(arr);\n    }\n  }\n\n  handleFocus = (e) => {\n    const activeDom = cb.dom(e.target);\n    const { optionKeys } = this;\n    if (!optionKeys.length) return;\n    if (activeDom.hasClass('s-checkgroup-wrapper')) {\n      this.setState({\n        focusKey: optionKeys[0]\n      })\n    }\n  }\n\n  handleKeyDown = (e) => {\n    const activeDom = cb.dom(e.target);\n    if (e.target.className.indexOf('s-checkgroup-wrapper') > 0 || activeDom.parents('.s-checkgroup-wrapper').length > 0) {\n      const { focusKey } = this.state;\n      const { optionKeys } = this;\n      const focusIndex = optionKeys.indexOf(focusKey);\n      const optionCount = optionKeys.length;\n      const st = {};\n      if (focusIndex > -1 && focusIndex < optionCount) {\n        let newIndex;\n        switch (e.keyCode) {\n          case KeyCode.LEFT:\n            newIndex = focusIndex - 1 < 0 ? optionCount - 1 : focusIndex - 1;\n            st.focusKey = optionKeys[newIndex];\n            break;\n          case KeyCode.RIGHT:\n            newIndex = focusIndex + 1 < optionCount ? focusIndex + 1 : 0;\n            st.focusKey = optionKeys[newIndex];\n            break;\n          default:\n            break;\n        }\n      }\n      this.setState(st);\n    }\n  }\n\n  getOptions () {\n    const { options = [] } = this.props;\n    this.optionKeys = [];\n    return (options).map(option => {\n      if (typeof option === 'string') {\n        this.optionKeys.push(option);\n        return {\n          label: option,\n          value: option\n        }\n      }\n      option.hasOwnProperty('value') && this.optionKeys.push(option.value);\n      return option;\n    });\n  }\n\n  render () {\n    let {\n      onChange,\n      value,\n      className,\n      children,\n      options,\n      ...others\n    } = this.props;\n    if (options && options.length > 0) {\n      children = this.getOptions().map(option => (\n        <CheckboxAdapter\n          key={option.value.toString()}\n          disabled={'disabled' in option ? option.disabled : this.props.disabled}\n          value={option.value}\n          checked={this.state.valueList.indexOf(option.value) !== -1}\n          focused={this.state.focusKey === option.value}\n        >\n          {option.label}\n        </CheckboxAdapter>\n      ));\n    }\n\n    return <div {...others} className={classnames(className, 's-checkgroup-wrapper')} ref={el => { this.checkgroup = el }} tabIndex='0' onFocus={this.handleFocus}>\n      {\n        React.Children.map(children, child => React.cloneElement(child, { className: classnames(child.props.className, 's-checkgroup-inner-item') }))\n      }\n    </div>\n  }\n}\n\nCheckboxAdapter.Group = GroupAdapter;\nCheckboxAdapter.contextTypes = {\n  checkboxGroup: PropTypes.any\n}\nexport default CheckboxAdapter;\n"],"file":"Checkbox.js"}